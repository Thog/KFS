[config]
skip_core_tasks = true

[env]
RUST_TARGET_PATH = "${PWD}"
GDB_PORT = { script = ["echo ${GDB_PORT:-9090}"] }
VNC_PORT = { script = ["echo ${VNC_PORT:-:0}"] }

[tasks.bootstrap-linker]
workspace = false
script = ["cp linker-scripts/bootstrap.ld link.T"]

[tasks.kernel-linker]
workspace = false
script = ["cp linker-scripts/kernel.ld    link.T"]

[tasks.userspace-linker]
workspace = false
script = ["cp linker-scripts/userspace.ld    link.T"]

[tasks.install-rust-src]
install_crate = { rustup_component_name = "rust-src" }

[tasks.install-mkisofs-rs]
install_crate = { crate_name = "mkisofs-rs", binary = "mkisofs-rs", test_arg = "--help" }

[tasks.bootstrap]
workspace = false
description = "Compiles the i386 bootstrap for debug"
dependencies = ["bootstrap-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-bootstrap" ]

[tasks.bootstrap-release]
workspace = false
description = "Compiles the i386 bootstrap for release"
dependencies = ["bootstrap-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-bootstrap", "--release" ]

[tasks.kernel]
workspace = false
description = "Compiles the kernel for debug"
dependencies = ["kernel-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-kernel", "-Z", "package-features", "--features=panic-on-exception"]

[tasks.kernel-release]
workspace = false
description = "Compiles the kernel for release"
dependencies = ["kernel-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-kernel", "--release" ]

[tasks.vi]
workspace = false
description = "Compiles kfs-vi"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-vi"]

[tasks.vi-release]
workspace = false
description = "Compiles kfs-vi"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-vi", "--release"]

[tasks.sm]
workspace = false
description = "Compiles kfs-sm"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-sm"]

[tasks.sm-release]
workspace = false
description = "Compiles kfs-sm"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-sm", "--release"]

[tasks.shell]
workspace = false
description = "Compiles kfs-shell"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-shell"]

[tasks.shell-release]
workspace = false
description = "Compiles kfs-shell"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-shell", "--release"]

[tasks.clock]
workspace = false
description = "Compiles kfs-clock"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-clock"]

[tasks.clock-release]
workspace = false
description = "Compiles kfs-clock"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-clock", "--release"]

[tasks.ahci]
workspace = false
description = "Compiles kfs-ahci"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-ahci"]

[tasks.ahci-release]
workspace = false
description = "Compiles kfs-ahci"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-ahci", "--release"]

[tasks.testing-client]
workspace = false
description = "Compiles kfs-testing-client"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-testing-client"]

[tasks.testing-client-release]
workspace = false
description = "Compiles kfs-testing-client"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-testing-client", "--release"]

[tasks.testing-server]
workspace = false
description = "Compiles kfs-testing-server"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-testing-server"]

[tasks.testing-server-release]
workspace = false
description = "Compiles kfs-testing-server"
dependencies = ["userspace-linker", "install-rust-src"]
command = "cargo"
args = ["xbuild", "--target=i386-unknown-none", "--package=kfs-testing-server", "--release"]

[tasks.userspace]
workspace = false
description = "Compiles userspace apps"
dependencies = ["shell", "clock", "sm", "vi", "ahci", "testing-client", "testing-server"]

[tasks.userspace-release]
workspace = false
description = "Compiles userspace apps"
dependencies = ["shell-release", "clock-release", "sm-release", "vi-release", "ahci-release", "testing-client-release", "testing-server-release"]

[tasks.iso]
workspace = false
description = "Creates a bootable ISO containing the kernel and grub."
dependencies = ["bootstrap", "kernel", "userspace", "install-mkisofs-rs"]
script = [
'''
cp target/i386-unknown-none/debug/kfs-bootstrap isofiles/boot/
cp target/i386-unknown-none/debug/kfs-kernel    isofiles/boot/
cp target/i386-unknown-none/debug/kfs-shell     isofiles/boot/
cp target/i386-unknown-none/debug/kfs-clock     isofiles/boot/
cp target/i386-unknown-none/debug/kfs-sm        isofiles/boot/
cp target/i386-unknown-none/debug/kfs-vi        isofiles/boot/
cp target/i386-unknown-none/debug/kfs-ahci      isofiles/boot/
cp target/i386-unknown-none/debug/kfs-testing-client      isofiles/boot/
cp target/i386-unknown-none/debug/kfs-testing-server      isofiles/boot/
mkisofs-rs external/grub/isofiles isofiles -o os.iso -b boot/grub/i386-pc/eltorito.img --no-emul-boot --boot-info-table --embedded-boot external/grub/embedded.img
'''
]

[tasks.iso-release]
workspace = false
description = "Creates a bootable ISO containing the kernel and grub."
dependencies = ["bootstrap-release", "kernel-release", "userspace-release", "install-mkisofs-rs"]
script = [
'''
cp target/i386-unknown-none/release/kfs-bootstrap isofiles/boot/
cp target/i386-unknown-none/release/kfs-kernel    isofiles/boot/
cp target/i386-unknown-none/release/kfs-shell     isofiles/boot/
cp target/i386-unknown-none/release/kfs-clock     isofiles/boot/
cp target/i386-unknown-none/release/kfs-sm        isofiles/boot/
cp target/i386-unknown-none/release/kfs-vi        isofiles/boot/
cp target/i386-unknown-none/release/kfs-ahci      isofiles/boot/
<<<<<<< Updated upstream
mkisofs-rs external/grub/isofiles isofiles -o os.iso -b boot/grub/i386-pc/eltorito.img --no-emul-boot --boot-info-table --embedded-boot external/grub/embedded.img
=======
cp target/i386-unknown-none/release/kfs-testing-client      isofiles/boot/
cp target/i386-unknown-none/release/kfs-testing-server      isofiles/boot/
grub-mkrescue -o os.iso isofiles
>>>>>>> Stashed changes
'''
]

[tasks.qemu]
workspace = false
description = "Runs the bootable ISO in qemu."
dependencies = ["iso-release"]
command = "qemu-system-i386"
args = ["-cdrom", "os.iso", "-serial", "stdio", "-no-reboot", "-enable-kvm"]

[tasks.qemu-debug]
workspace = false
description = "Runs the bootable ISO in qemu with gdb support"
dependencies = ["iso"]
command = "qemu-system-i386"
args = ["-cdrom", "os.iso", "-serial", "stdio", "-no-reboot", "-gdb", "tcp::${GDB_PORT}", "-S", "-d", "int,cpu_reset"]

[tasks.doc]
workspace = false
description = "Generate the project's documentation"
env = { "RUSTFLAGS" = "--sysroot=${PWD}/target/sysroot",  "RUSTDOCFLAGS" = "--sysroot=${PWD}/target/sysroot"}
command = "cargo"
args = ["doc", "--target=i386-unknown-none", "--no-deps" ]

[tasks.doc-full]
workspace = false
description = "Generate the project's documentation, including private items"
env = { "RUSTFLAGS" = "--sysroot=${PWD}/target/sysroot",  "RUSTDOCFLAGS" = "--sysroot=${PWD}/target/sysroot -Z unstable-options --enable-index-page"}
command = "cargo"
args = ["doc", "--target=i386-unknown-none", "--no-deps", "--document-private-items"]

[tasks.deploy-doc]
workspace = false
install_crate = { crate_name = "cargo-travis", binary = "cargo", test_arg = "doc-upload --help" }
install_crate_args = ["--git", "https://github.com/roblabla/cargo-travis", "--rev", "doc-upload-target"]
description = "Upload this project's documentation on github pages. Should only run on CI."
command = "cargo"
args = ["doc-upload", "--target=i386-unknown-none", "--clobber-index"]

[tasks.test]
workspace = false
description = "Run the tests in 32bit mode"
command = "cargo"
args = ["test", "--target=i686-unknown-linux-gnu"]
